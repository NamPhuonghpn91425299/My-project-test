{"id":582,"assetBundleId":-1,"data":[[],"Universal Render Pipeline\/Unlit",null,["FOG_EXP","FOG_EXP2","FOG_LINEAR","_ALPHAMODULATE_ON","_ALPHATEST_ON","DEBUG_DISPLAY","DOTS_INSTANCING_ON","INSTANCING_ON","LOD_FADE_CROSSFADE","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_DBUFFER_MRT1","_DBUFFER_MRT2","_DBUFFER_MRT3","_SCREEN_SPACE_OCCLUSION","_SURFACE_TYPE_TRANSPARENT","_WRITE_RENDERING_LAYERS","_","__"],[[0,0,"Unlit",0,"",0,[4,null],[0,"_ZWrite"],[0,"_Cull"],[[0,"_SrcBlend"],[0,"_DstBlend"],[0,null]],[[0,"_SrcBlendAlpha"],[0,"_DstBlendAlpha"],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["RenderPipeline","UniversalPipeline"],["RenderType","Opaque"],["UniversalMaterialType","Unlit"]],["DEBUG_DISPLAY","DOTS_INSTANCING_ON","FOG_EXP","FOG_EXP2","FOG_LINEAR","INSTANCING_ON","LOD_FADE_CROSSFADE","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_ALPHAMODULATE_ON","_ALPHATEST_ON","_DBUFFER_MRT1","_DBUFFER_MRT2","_DBUFFER_MRT3","_SCREEN_SPACE_OCCLUSION","_SURFACE_TYPE_TRANSPARENT","_WRITE_RENDERING_LAYERS","_","__"],[[["_","DEBUG_DISPLAY"],0],[["_","DOTS_INSTANCING_ON"],0],[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"],0],[["__","INSTANCING_ON"],0]],[[0,0,[],"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _BaseMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp float vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n    u_xlat6 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat6;\n    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat6;\n    vs_TEXCOORD1 = u_xlat6 + hlslcc_mtx4x4unity_MatrixV[3].z;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _BaseMap_ST.xy + _BaseMap_ST.zw;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = u_xlat0 + hlslcc_mtx4x4unity_MatrixVP[3];\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec2 _GlobalMipBias;\nuniform \tmediump vec4 _BaseColor;\nuniform \tmediump float _Surface;\nuniform lowp sampler2D _BaseMap;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nbool u_xlatb0;\nlowp vec4 u_xlat10_1;\nmediump float u_xlat16_2;\nvoid main()\n{\n    u_xlatb0 = _Surface==1.0;\n    u_xlat10_1 = texture2D(_BaseMap, vs_TEXCOORD0.xy, _GlobalMipBias.x);\n    u_xlat16_2 = u_xlat10_1.w * _BaseColor.w;\n    SV_Target0.xyz = u_xlat10_1.xyz * _BaseColor.xyz;\n    SV_Target0.w = (u_xlatb0) ? u_xlat16_2 : 1.0;\n    return;\n}\n\n",0,0],[0,0,[],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\nUNITY_BINDING(1) uniform UnityPerDraw {\n#endif\n\tUNITY_UNIFORM vec4                hlslcc_mtx4x4unity_ObjectToWorld[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4unity_WorldToObject[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_LODFade;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_WorldTransformParams;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_RenderingLayer;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_LightData;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_LightIndices[2];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_ProbesOcclusion;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_SpecCube0_HDR;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_SpecCube1_HDR;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube0_BoxMax;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube0_BoxMin;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube0_ProbePosition;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube1_BoxMax;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube1_BoxMin;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube1_ProbePosition;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_LightmapST;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_DynamicLightmapST;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_SHAr;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_SHAg;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_SHAb;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_SHBr;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_SHBg;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_SHBb;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_SHC;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_RendererBounds_Min;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_RendererBounds_Max;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4unity_MatrixPreviousM[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4unity_MatrixPreviousMI[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_MotionVectorsParams;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\nUNITY_BINDING(0) uniform UnityPerMaterial {\n#endif\n\tUNITY_UNIFORM vec4                _BaseMap_ST;\n\tUNITY_UNIFORM mediump vec4                _BaseColor;\n\tUNITY_UNIFORM mediump float Xhlslcc_UnusedX_Cutoff;\n\tUNITY_UNIFORM mediump float                _Surface;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp float vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n    u_xlat6 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat6;\n    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat6;\n    vs_TEXCOORD1 = u_xlat6 + hlslcc_mtx4x4unity_MatrixV[3].z;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _BaseMap_ST.xy + _BaseMap_ST.zw;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = u_xlat0 + hlslcc_mtx4x4unity_MatrixVP[3];\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec2 _GlobalMipBias;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\nUNITY_BINDING(0) uniform UnityPerMaterial {\n#endif\n\tUNITY_UNIFORM vec4                _BaseMap_ST;\n\tUNITY_UNIFORM mediump vec4                _BaseColor;\n\tUNITY_UNIFORM mediump float Xhlslcc_UnusedX_Cutoff;\n\tUNITY_UNIFORM mediump float                _Surface;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _BaseMap;\nin highp vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nbool u_xlatb0;\nmediump vec4 u_xlat16_1;\nmediump float u_xlat16_2;\nvoid main()\n{\n    u_xlatb0 = _Surface==1.0;\n    u_xlat16_1 = texture(_BaseMap, vs_TEXCOORD0.xy, _GlobalMipBias.x);\n    u_xlat16_2 = u_xlat16_1.w * _BaseColor.w;\n    SV_Target0.xyz = u_xlat16_1.xyz * _BaseColor.xyz;\n    SV_Target0.w = (u_xlatb0) ? u_xlat16_2 : 1.0;\n    return;\n}\n\n",1,0]],[],0]],[],[["_BaseMap",4,0,0,0,0,"white",128],["_BaseColor",0,1,1,1,1,"",256],["_Cutoff",3,0.5,0,1,0,"",0],["_Surface",2,0,0,0,0,"",0],["_Blend",2,0,0,0,0,"",0],["_Cull",2,2,0,0,0,"",0],["_AlphaClip",2,0,0,0,0,"",0],["_BlendOp",2,0,0,0,0,"",1],["_SrcBlend",2,1,0,0,0,"",1],["_DstBlend",2,0,0,0,0,"",1],["_SrcBlendAlpha",2,1,0,0,0,"",1],["_DstBlendAlpha",2,0,0,0,0,"",1],["_ZWrite",2,1,0,0,0,"",1],["_AlphaToMask",2,0,0,0,0,"",1],["_QueueOffset",2,0,0,0,0,"",0],["_MainTex",4,0,0,0,0,"white",1],["_Color",0,0.5,0.5,0.5,1,"",1],["_SampleGI",2,0,0,0,0,"",1]],17,426,0,0,0]}