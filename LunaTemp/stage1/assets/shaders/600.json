{"id":600,"assetBundleId":-1,"data":[[],"Horus\/Lit",null,["DIRLIGHTMAP_COMBINED","FOG_EXP","FOG_EXP2","FOG_LINEAR","LIGHTMAP_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_MAIN_LIGHT_SHADOWS","_MAIN_LIGHT_SHADOWS_CASCADE","_","__"],[[0,0,"",0,"",0,[4,null],[1,null],[0,"_Cull"],[[1,null],[0,null],[0,null]],[[1,null],[0,null],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["RenderType","Opaque"]],["DIRLIGHTMAP_COMBINED","FOG_EXP","FOG_EXP2","FOG_LINEAR","LIGHTMAP_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_MAIN_LIGHT_SHADOWS","_MAIN_LIGHT_SHADOWS_CASCADE","_","__"],[[["_","_MAIN_LIGHT_SHADOWS"],0],[["_","_MAIN_LIGHT_SHADOWS_CASCADE"],0],[["_","DIRLIGHTMAP_COMBINED"],0],[["_","LIGHTMAP_ON"],0],[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"],0]],[[0,0,[],"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec4 in_NORMAL0;\nattribute highp vec4 in_TANGENT0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp float vs_TEXCOORD6;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD8;\nvarying highp vec3 vs_TEXCOORD9;\nvarying highp vec3 vs_TEXCOORD10;\nvarying mediump vec3 vs_TEXCOORD7;\nvec3 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nfloat u_xlat12;\nbool u_xlatb12;\nvoid main()\n{\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = u_xlat1 + hlslcc_mtx4x4unity_MatrixVP[3];\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD6 = 0.0;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n    u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    vs_TEXCOORD2.xyz = vec3(0.0, 0.0, 0.0);\n    u_xlatb12 = unity_OrthoParams.w==0.0;\n    vs_TEXCOORD5.x = (u_xlatb12) ? u_xlat0.x : hlslcc_mtx4x4unity_MatrixV[0].z;\n    vs_TEXCOORD5.y = (u_xlatb12) ? u_xlat0.y : hlslcc_mtx4x4unity_MatrixV[1].z;\n    vs_TEXCOORD5.z = (u_xlatb12) ? u_xlat0.z : hlslcc_mtx4x4unity_MatrixV[2].z;\n    u_xlatb0 = unity_WorldTransformParams.w>=0.0;\n    u_xlat0.x = (u_xlatb0) ? 1.0 : -1.0;\n    u_xlat16_2.x = u_xlat0.x * in_TANGENT0.w;\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = max(u_xlat12, 1.17549435e-38);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = max(u_xlat12, 1.17549435e-38);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat3.xyz = u_xlat0.xyz * u_xlat1.xyz;\n    u_xlat3.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat3.xyz);\n    u_xlat16_2.xyz = u_xlat16_2.xxx * u_xlat3.xyz;\n    vs_TEXCOORD8.y = u_xlat16_2.x;\n    vs_TEXCOORD8.x = u_xlat1.z;\n    vs_TEXCOORD8.z = u_xlat0.y;\n    vs_TEXCOORD9.x = u_xlat1.x;\n    vs_TEXCOORD10.x = u_xlat1.y;\n    vs_TEXCOORD9.z = u_xlat0.z;\n    vs_TEXCOORD10.z = u_xlat0.x;\n    vs_TEXCOORD9.y = u_xlat16_2.y;\n    vs_TEXCOORD10.y = u_xlat16_2.z;\n    vs_TEXCOORD7.xyz = vec3(0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec2 _GlobalMipBias;\nuniform \tvec4 _MainLightPosition;\nuniform \tmediump vec4 _MainLightColor;\nuniform \tmediump vec4 unity_LightData;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Smoothness;\nuniform \tmediump float _Metallic;\nuniform \tmediump vec3 _EmissionColor;\nuniform \tfloat _BumpScale;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD8;\nvarying highp vec3 vs_TEXCOORD9;\nvarying highp vec3 vs_TEXCOORD10;\n#define SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec4 u_xlat16_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nvec3 u_xlat4;\nlowp vec3 u_xlat10_4;\nvec3 u_xlat5;\nmediump vec4 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec2 u_xlat16_9;\nfloat u_xlat13;\nmediump float u_xlat16_16;\nmediump float u_xlat16_30;\nmediump float u_xlat16_32;\nfloat u_xlat33;\nvoid main()\n{\n    u_xlat16_0.x = vs_TEXCOORD2.y * vs_TEXCOORD2.y;\n    u_xlat16_0.x = vs_TEXCOORD2.x * vs_TEXCOORD2.x + (-u_xlat16_0.x);\n    u_xlat16_1 = vs_TEXCOORD2.yzzx * vs_TEXCOORD2.xyzz;\n    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;\n    u_xlat1.xyz = vs_TEXCOORD2.xyz;\n    u_xlat1.w = 1.0;\n    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);\n    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;\n    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat10_3.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy, _GlobalMipBias.x).yw;\n    u_xlat16_2.xy = u_xlat10_3.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_30 = dot(u_xlat16_2.xy, u_xlat16_2.xy);\n    u_xlat16_2.xy = u_xlat16_2.xy * vec2(_BumpScale);\n    u_xlat16_30 = min(u_xlat16_30, 1.0);\n    u_xlat16_30 = (-u_xlat16_30) + 1.0;\n    u_xlat16_30 = sqrt(u_xlat16_30);\n    u_xlat16_2.z = max(u_xlat16_30, 1.00000002e-16);\n    u_xlat3.x = dot(u_xlat16_2.xyz, vs_TEXCOORD8.xyz);\n    u_xlat3.y = dot(u_xlat16_2.xyz, vs_TEXCOORD9.xyz);\n    u_xlat3.z = dot(u_xlat16_2.xyz, vs_TEXCOORD10.xyz);\n    u_xlat33 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat33 = max(u_xlat33, 1.17549435e-38);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat3.xyz = vec3(u_xlat33) * u_xlat3.xyz;\n    u_xlat33 = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);\n    u_xlat33 = max(u_xlat33, 1.17549435e-38);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat4.xyz = vec3(u_xlat33) * vs_TEXCOORD5.xyz;\n    u_xlat5.xyz = vs_TEXCOORD5.xyz * vec3(u_xlat33) + _MainLightPosition.xyz;\n    u_xlat16_30 = dot((-u_xlat4.xyz), u_xlat3.xyz);\n    u_xlat16_30 = u_xlat16_30 + u_xlat16_30;\n    u_xlat16_2.xyz = u_xlat3.xyz * (-vec3(u_xlat16_30)) + (-u_xlat4.xyz);\n    u_xlat16_30 = dot(u_xlat3.xyz, u_xlat4.xyz);\n    u_xlat16_30 = clamp(u_xlat16_30, 0.0, 1.0);\n    u_xlat16_30 = (-u_xlat16_30) + 1.0;\n    u_xlat16_30 = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_30 = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_32 = (-_Smoothness) + 1.0;\n    u_xlat16_6.x = (-u_xlat16_32) * 0.699999988 + 1.70000005;\n    u_xlat16_6.x = u_xlat16_32 * u_xlat16_6.x;\n    u_xlat16_2.w = u_xlat16_32 * u_xlat16_32;\n    u_xlat16_6.x = u_xlat16_6.x * 6.0;\n    u_xlat10_1 = textureCube(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_6.x);\n    u_xlat16_2.x = u_xlat10_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.xw = max(u_xlat16_2.xw, vec2(0.0, 0.0078125));\n    u_xlat16_2.x = log2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.y;\n    u_xlat16_2.x = exp2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;\n    u_xlat16_6.x = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_16 = (-u_xlat16_6.x) + _Smoothness;\n    u_xlat16_16 = u_xlat16_16 + 1.0;\n    u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);\n    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy, _GlobalMipBias.x).xyz;\n    u_xlat16_7.xyz = u_xlat10_4.xyz * _Color.xyz + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n    u_xlat4.xyz = u_xlat10_4.xyz * _Color.xyz;\n    u_xlat16_6.xzw = u_xlat16_6.xxx * u_xlat4.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_8.xyz = vec3(u_xlat16_16) + (-u_xlat16_7.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat16_30) * u_xlat16_8.xyz + u_xlat16_7.xyz;\n    u_xlat16_9.xy = u_xlat16_2.ww * u_xlat16_2.ww + vec2(-1.0, 1.0);\n    u_xlat16_30 = float(1.0) \/ u_xlat16_9.y;\n    u_xlat4.xyz = u_xlat16_8.xyz * vec3(u_xlat16_30);\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat4.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_6.xzw + u_xlat16_2.xyz;\n    u_xlat33 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat33 = max(u_xlat33, 1.17549435e-38);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat4.xyz = vec3(u_xlat33) * u_xlat5.xyz;\n    u_xlat33 = dot(_MainLightPosition.xyz, u_xlat4.xyz);\n    u_xlat33 = clamp(u_xlat33, 0.0, 1.0);\n    u_xlat4.x = dot(u_xlat3.xyz, u_xlat4.xyz);\n    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);\n    u_xlat16_30 = dot(u_xlat3.xyz, _MainLightPosition.xyz);\n    u_xlat16_30 = clamp(u_xlat16_30, 0.0, 1.0);\n    u_xlat16_30 = u_xlat16_30 * unity_LightData.z;\n    u_xlat16_2.xyz = vec3(u_xlat16_30) * _MainLightColor.xyz;\n    u_xlat3.x = u_xlat4.x * u_xlat4.x;\n    u_xlat3.x = u_xlat3.x * u_xlat16_9.x + 1.00001001;\n    u_xlat3.x = u_xlat3.x * u_xlat3.x;\n    u_xlat16_30 = u_xlat33 * u_xlat33;\n    u_xlat13 = max(u_xlat16_30, 0.100000001);\n    u_xlat3.x = u_xlat13 * u_xlat3.x;\n    u_xlat16_30 = u_xlat16_2.w * 4.0 + 2.0;\n    u_xlat16_32 = u_xlat16_2.w * u_xlat16_2.w;\n    u_xlat3.x = u_xlat16_30 * u_xlat3.x;\n    u_xlat3.x = u_xlat16_32 \/ u_xlat3.x;\n    u_xlat16_30 = u_xlat3.x + -6.10351562e-05;\n    u_xlat16_30 = max(u_xlat16_30, 0.0);\n    u_xlat16_30 = min(u_xlat16_30, 1000.0);\n    u_xlat16_6.xyz = u_xlat16_7.xyz * vec3(u_xlat16_30) + u_xlat16_6.xzw;\n    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_2.xyz + u_xlat16_0.xyz;\n    u_xlat10_3.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy, _GlobalMipBias.x).xyz;\n    u_xlat16_0.xyz = u_xlat10_3.xyz * _EmissionColor.xyz + u_xlat16_0.xyz;\n    SV_Target0.xyz = min(u_xlat16_0.xyz, vec3(65504.0, 65504.0, 65504.0));\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0],[0,0,[],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\nUNITY_BINDING(0) uniform UnityPerDraw {\n#endif\n\tUNITY_UNIFORM vec4                hlslcc_mtx4x4unity_ObjectToWorld[4];\n\tUNITY_UNIFORM vec4                hlslcc_mtx4x4unity_WorldToObject[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_LODFade;\n\tUNITY_UNIFORM mediump vec4                unity_WorldTransformParams;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_RenderingLayer;\n\tUNITY_UNIFORM mediump vec4                unity_LightData;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_LightIndices[2];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_ProbesOcclusion;\n\tUNITY_UNIFORM mediump vec4                unity_SpecCube0_HDR;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_SpecCube1_HDR;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube0_BoxMax;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube0_BoxMin;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube0_ProbePosition;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube1_BoxMax;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube1_BoxMin;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube1_ProbePosition;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_LightmapST;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_DynamicLightmapST;\n\tUNITY_UNIFORM mediump vec4                unity_SHAr;\n\tUNITY_UNIFORM mediump vec4                unity_SHAg;\n\tUNITY_UNIFORM mediump vec4                unity_SHAb;\n\tUNITY_UNIFORM mediump vec4                unity_SHBr;\n\tUNITY_UNIFORM mediump vec4                unity_SHBg;\n\tUNITY_UNIFORM mediump vec4                unity_SHBb;\n\tUNITY_UNIFORM mediump vec4                unity_SHC;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_RendererBounds_Min;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_RendererBounds_Max;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4unity_MatrixPreviousM[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4unity_MatrixPreviousMI[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_MotionVectorsParams;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\nUNITY_BINDING(1) uniform UnityPerMaterial {\n#endif\n\tUNITY_UNIFORM vec4                _MainTex_ST;\n\tUNITY_UNIFORM mediump vec4                _Color;\n\tUNITY_UNIFORM mediump float                _Smoothness;\n\tUNITY_UNIFORM mediump float                _Metallic;\n\tUNITY_UNIFORM mediump vec3                _EmissionColor;\n\tUNITY_UNIFORM float                _BumpScale;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec4 in_NORMAL0;\nin highp vec4 in_TANGENT0;\nout highp vec2 vs_TEXCOORD0;\nout highp float vs_TEXCOORD6;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD5;\nout highp vec3 vs_TEXCOORD8;\nout highp vec3 vs_TEXCOORD9;\nout highp vec3 vs_TEXCOORD10;\nout mediump vec3 vs_TEXCOORD7;\nvec3 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nfloat u_xlat12;\nbool u_xlatb12;\nvoid main()\n{\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = u_xlat1 + hlslcc_mtx4x4unity_MatrixVP[3];\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD6 = 0.0;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n    u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    vs_TEXCOORD2.xyz = vec3(0.0, 0.0, 0.0);\n    u_xlatb12 = unity_OrthoParams.w==0.0;\n    vs_TEXCOORD5.x = (u_xlatb12) ? u_xlat0.x : hlslcc_mtx4x4unity_MatrixV[0].z;\n    vs_TEXCOORD5.y = (u_xlatb12) ? u_xlat0.y : hlslcc_mtx4x4unity_MatrixV[1].z;\n    vs_TEXCOORD5.z = (u_xlatb12) ? u_xlat0.z : hlslcc_mtx4x4unity_MatrixV[2].z;\n    u_xlatb0 = unity_WorldTransformParams.w>=0.0;\n    u_xlat0.x = (u_xlatb0) ? 1.0 : -1.0;\n    u_xlat16_2.x = u_xlat0.x * in_TANGENT0.w;\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = max(u_xlat12, 1.17549435e-38);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = max(u_xlat12, 1.17549435e-38);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat3.xyz = u_xlat0.xyz * u_xlat1.xyz;\n    u_xlat3.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat3.xyz);\n    u_xlat16_2.xyz = u_xlat16_2.xxx * u_xlat3.xyz;\n    vs_TEXCOORD8.y = u_xlat16_2.x;\n    vs_TEXCOORD8.x = u_xlat1.z;\n    vs_TEXCOORD8.z = u_xlat0.y;\n    vs_TEXCOORD9.x = u_xlat1.x;\n    vs_TEXCOORD10.x = u_xlat1.y;\n    vs_TEXCOORD9.z = u_xlat0.z;\n    vs_TEXCOORD10.z = u_xlat0.x;\n    vs_TEXCOORD9.y = u_xlat16_2.y;\n    vs_TEXCOORD10.y = u_xlat16_2.z;\n    vs_TEXCOORD7.xyz = vec3(0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec2 _GlobalMipBias;\nuniform \tvec4 _MainLightPosition;\nuniform \tmediump vec4 _MainLightColor;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\nUNITY_BINDING(0) uniform UnityPerDraw {\n#endif\n\tUNITY_UNIFORM vec4                hlslcc_mtx4x4unity_ObjectToWorld[4];\n\tUNITY_UNIFORM vec4                hlslcc_mtx4x4unity_WorldToObject[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_LODFade;\n\tUNITY_UNIFORM mediump vec4                unity_WorldTransformParams;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_RenderingLayer;\n\tUNITY_UNIFORM mediump vec4                unity_LightData;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_LightIndices[2];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_ProbesOcclusion;\n\tUNITY_UNIFORM mediump vec4                unity_SpecCube0_HDR;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_SpecCube1_HDR;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube0_BoxMax;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube0_BoxMin;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube0_ProbePosition;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube1_BoxMax;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube1_BoxMin;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_SpecCube1_ProbePosition;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_LightmapST;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_DynamicLightmapST;\n\tUNITY_UNIFORM mediump vec4                unity_SHAr;\n\tUNITY_UNIFORM mediump vec4                unity_SHAg;\n\tUNITY_UNIFORM mediump vec4                unity_SHAb;\n\tUNITY_UNIFORM mediump vec4                unity_SHBr;\n\tUNITY_UNIFORM mediump vec4                unity_SHBg;\n\tUNITY_UNIFORM mediump vec4                unity_SHBb;\n\tUNITY_UNIFORM mediump vec4                unity_SHC;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_RendererBounds_Min;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_RendererBounds_Max;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4unity_MatrixPreviousM[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4unity_MatrixPreviousMI[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_MotionVectorsParams;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\nUNITY_BINDING(1) uniform UnityPerMaterial {\n#endif\n\tUNITY_UNIFORM vec4                _MainTex_ST;\n\tUNITY_UNIFORM mediump vec4                _Color;\n\tUNITY_UNIFORM mediump float                _Smoothness;\n\tUNITY_UNIFORM mediump float                _Metallic;\n\tUNITY_UNIFORM mediump vec3                _EmissionColor;\n\tUNITY_UNIFORM float                _BumpScale;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\nUNITY_LOCATION(0) uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(1) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(2) uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(3) uniform mediump sampler2D _BumpMap;\nin highp vec2 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD5;\nin highp vec3 vs_TEXCOORD8;\nin highp vec3 vs_TEXCOORD9;\nin highp vec3 vs_TEXCOORD10;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump vec3 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec4 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec2 u_xlat16_9;\nfloat u_xlat13;\nmediump float u_xlat16_16;\nmediump float u_xlat16_30;\nmediump float u_xlat16_32;\nfloat u_xlat33;\nvoid main()\n{\n    u_xlat16_0.x = vs_TEXCOORD2.y * vs_TEXCOORD2.y;\n    u_xlat16_0.x = vs_TEXCOORD2.x * vs_TEXCOORD2.x + (-u_xlat16_0.x);\n    u_xlat16_1 = vs_TEXCOORD2.yzzx * vs_TEXCOORD2.xyzz;\n    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;\n    u_xlat1.xyz = vs_TEXCOORD2.xyz;\n    u_xlat1.w = 1.0;\n    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);\n    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;\n    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_3.xy = texture(_BumpMap, vs_TEXCOORD0.xy, _GlobalMipBias.x).yw;\n    u_xlat16_2.xy = u_xlat16_3.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_30 = dot(u_xlat16_2.xy, u_xlat16_2.xy);\n    u_xlat16_2.xy = u_xlat16_2.xy * vec2(_BumpScale);\n    u_xlat16_30 = min(u_xlat16_30, 1.0);\n    u_xlat16_30 = (-u_xlat16_30) + 1.0;\n    u_xlat16_30 = sqrt(u_xlat16_30);\n    u_xlat16_2.z = max(u_xlat16_30, 1.00000002e-16);\n    u_xlat3.x = dot(u_xlat16_2.xyz, vs_TEXCOORD8.xyz);\n    u_xlat3.y = dot(u_xlat16_2.xyz, vs_TEXCOORD9.xyz);\n    u_xlat3.z = dot(u_xlat16_2.xyz, vs_TEXCOORD10.xyz);\n    u_xlat33 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat33 = max(u_xlat33, 1.17549435e-38);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat3.xyz = vec3(u_xlat33) * u_xlat3.xyz;\n    u_xlat33 = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);\n    u_xlat33 = max(u_xlat33, 1.17549435e-38);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat4.xyz = vec3(u_xlat33) * vs_TEXCOORD5.xyz;\n    u_xlat5.xyz = vs_TEXCOORD5.xyz * vec3(u_xlat33) + _MainLightPosition.xyz;\n    u_xlat16_30 = dot((-u_xlat4.xyz), u_xlat3.xyz);\n    u_xlat16_30 = u_xlat16_30 + u_xlat16_30;\n    u_xlat16_2.xyz = u_xlat3.xyz * (-vec3(u_xlat16_30)) + (-u_xlat4.xyz);\n    u_xlat16_30 = dot(u_xlat3.xyz, u_xlat4.xyz);\n    u_xlat16_30 = clamp(u_xlat16_30, 0.0, 1.0);\n    u_xlat16_30 = (-u_xlat16_30) + 1.0;\n    u_xlat16_30 = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_30 = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_32 = (-_Smoothness) + 1.0;\n    u_xlat16_6.x = (-u_xlat16_32) * 0.699999988 + 1.70000005;\n    u_xlat16_6.x = u_xlat16_32 * u_xlat16_6.x;\n    u_xlat16_2.w = u_xlat16_32 * u_xlat16_32;\n    u_xlat16_6.x = u_xlat16_6.x * 6.0;\n    u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_6.x);\n    u_xlat16_2.x = u_xlat16_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.xw = max(u_xlat16_2.xw, vec2(0.0, 0.0078125));\n    u_xlat16_2.x = log2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.y;\n    u_xlat16_2.x = exp2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * u_xlat16_2.xxx;\n    u_xlat16_6.x = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_16 = (-u_xlat16_6.x) + _Smoothness;\n    u_xlat16_16 = u_xlat16_16 + 1.0;\n    u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);\n    u_xlat16_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy, _GlobalMipBias.x).xyz;\n    u_xlat16_7.xyz = u_xlat16_4.xyz * _Color.xyz + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n    u_xlat4.xyz = u_xlat16_4.xyz * _Color.xyz;\n    u_xlat16_6.xzw = u_xlat16_6.xxx * u_xlat4.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_8.xyz = vec3(u_xlat16_16) + (-u_xlat16_7.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat16_30) * u_xlat16_8.xyz + u_xlat16_7.xyz;\n    u_xlat16_9.xy = u_xlat16_2.ww * u_xlat16_2.ww + vec2(-1.0, 1.0);\n    u_xlat16_30 = float(1.0) \/ u_xlat16_9.y;\n    u_xlat4.xyz = u_xlat16_8.xyz * vec3(u_xlat16_30);\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat4.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_6.xzw + u_xlat16_2.xyz;\n    u_xlat33 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat33 = max(u_xlat33, 1.17549435e-38);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat4.xyz = vec3(u_xlat33) * u_xlat5.xyz;\n    u_xlat33 = dot(_MainLightPosition.xyz, u_xlat4.xyz);\n    u_xlat33 = clamp(u_xlat33, 0.0, 1.0);\n    u_xlat4.x = dot(u_xlat3.xyz, u_xlat4.xyz);\n    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);\n    u_xlat16_30 = dot(u_xlat3.xyz, _MainLightPosition.xyz);\n    u_xlat16_30 = clamp(u_xlat16_30, 0.0, 1.0);\n    u_xlat16_30 = u_xlat16_30 * unity_LightData.z;\n    u_xlat16_2.xyz = vec3(u_xlat16_30) * _MainLightColor.xyz;\n    u_xlat3.x = u_xlat4.x * u_xlat4.x;\n    u_xlat3.x = u_xlat3.x * u_xlat16_9.x + 1.00001001;\n    u_xlat3.x = u_xlat3.x * u_xlat3.x;\n    u_xlat16_30 = u_xlat33 * u_xlat33;\n    u_xlat13 = max(u_xlat16_30, 0.100000001);\n    u_xlat3.x = u_xlat13 * u_xlat3.x;\n    u_xlat16_30 = u_xlat16_2.w * 4.0 + 2.0;\n    u_xlat16_32 = u_xlat16_2.w * u_xlat16_2.w;\n    u_xlat3.x = u_xlat16_30 * u_xlat3.x;\n    u_xlat3.x = u_xlat16_32 \/ u_xlat3.x;\n    u_xlat16_30 = u_xlat3.x + -6.10351562e-05;\n    u_xlat16_30 = max(u_xlat16_30, 0.0);\n    u_xlat16_30 = min(u_xlat16_30, 1000.0);\n    u_xlat16_6.xyz = u_xlat16_7.xyz * vec3(u_xlat16_30) + u_xlat16_6.xzw;\n    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_2.xyz + u_xlat16_0.xyz;\n    u_xlat16_3.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy, _GlobalMipBias.x).xyz;\n    u_xlat16_0.xyz = u_xlat16_3.xyz * _EmissionColor.xyz + u_xlat16_0.xyz;\n    SV_Target0.xyz = min(u_xlat16_0.xyz, vec3(65504.0, 65504.0, 65504.0));\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",1,0]],[],0]],[],[["_Cull",3,2,0,1,0,"",0],["_MainTex",4,0,0,0,0,"white",0],["_Color",0,1,1,1,1,"",0],["_Smoothness",3,0.5,0,1,0,"",0],["_Metallic",3,0.5,0,1,0,"",0],["_BumpScale",2,1,0,0,0,"",0],["_BumpMap",4,0,0,0,0,"bump",8],["_EmissionColor",0,0,0,0,1,"",16],["_EmissionMap",4,0,0,0,0,"white",0]],17,582,0,0,0]}